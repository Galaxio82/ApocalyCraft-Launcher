name: Launcher Build
on:
  push:
    branches: [ main ]  # Branche sur laquelle le workflow sera exécuté

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write   # Nécessaire pour écrire dans les contenus du dépôt (créer des releases)
      id-token: write    # Autorisation pour émettre des tokens d'identification, si nécessaire pour d'autres actions

    steps:
      - name: Checkout
        uses: actions/checkout@v2  # Vérifier le code source

      - name: Get version
        run: echo "version=$(jq -r .version package.json)" >> $GITHUB_ENV  # Extraire la version du package.json

      # Étape pour créer la balise (tag)
      - name: Create Tag
        run: |
          git tag ${{ env.version }}  # Crée la balise à partir de la version dans package.json
          git push origin ${{ env.version }}  # Pousse la balise sur GitHub

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1  # Créer la release sur GitHub
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.version }}  # Utiliser la balise (tag) comme nom de release
          release_name: release ${{ env.version }}
          draft: false
          prerelease: ${{ contains(env.version, 'beta') || contains(env.version, 'alpha') }}

  build-launcher:
    needs: create-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Dependencies
        run: npm ci
        shell: bash

      - name: Build
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run build
        shell: bash
